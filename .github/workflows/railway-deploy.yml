name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job para el Frontend
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Build frontend
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

  # Job para el Backend
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Check for hardcoded secrets
        run: |
          echo "Checking for hardcoded secrets..."
          ! grep -r "admin123\|garralda1\|secret-key" --include="*.js" --include="*.jsx" .
      
  # NotificaciÃ³n de deployment
  notify:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deployment notification
        run: |
          echo "âœ… All checks passed!"
          echo "ðŸš€ Railway will auto-deploy from GitHub webhook"
          echo "ðŸ“Š Check deployment status at: https://railway.app"